public class Solution {
    /**
     * Using regex to replace all the characters other than number and alphabet.
     * Then start comparison from 2 sides
     */
    public boolean isPalindrome(String s) {
        if (s.isEmpty()) return true;
        
        String actual = s.replaceAll("[^A-Za-z0-9]", "").toLowerCase();
        char[] ch = actual.toCharArray();
        int head = 0, tail = ch.length - 1;
        while (head <= tail) {
            if (ch[head] != ch[tail]) {
                return false;
            }
            head++;
            tail--;
        }
        return true;
    }
    
    
    
    
    /**
     * Simple idea.
     * Judge each valid character and skip andy invalid character.
     * We can also use while loop to skip invalid characters.
     * Loop form 2 sides of the string. 
     */
    public boolean isPalindrome(String s) {
        if (s.isEmpty()) return true;
        
        char[] charS = s.toCharArray();
        int start = 0, end = charS.length - 1;
        
        while (start <= end) {
            if (!isValid(charS[start])) {
                start++;
            } else if (!isValid(charS[end])) {
                end--;
            } else {
                if (!isEqual(charS[start], charS[end])) {
                    return false;
                }
                start++;
                end--;
            }
        }
        
        return true;
    }
    
    private boolean isValid(char c) {
        return ((c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z') || (c >= '0' && c <= '9'));
    }
    
    private boolean isEqual(char a, char b) {
        if (Character.toLowerCase(a) == Character.toLowerCase(b)) {
            return true;
        }
        return false;
    }
}
